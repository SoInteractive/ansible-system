---
- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags:
    - always

- name: Fail when system_fqdn is not a domain
  fail:
    msg: "system_fqdn is an ip address!!!"
  when: system_fqdn | search('[a-zA-Z]') == 0

- include: proxy.yml
  when: system_http_proxy != ""

- include: packages.yml

- name: Bash history timestamp
  lineinfile:
    path: "{{ system_bash_config_path }}"
    line: 'export HISTTIMEFORMAT="%d/%m/%y %T "'

- include: unattended.yml
  when: system_autoupgrades

- include: sysctl.yml

- include: motd.yml
  when: system_motd != ""

- include: hosts.yml
  when: ansible_virtualization_type != "docker"

- include: locale.yml

- include: logs.yml
  when: system_log_aggregator != ""

#- name: Reboot
#  command: shutdown -r now "Ansible updates triggered"
#  async: 0
#  poll: 0
#  ignore_errors: true
#  when: upgrade_system
#
#- name: Wait for server to come back
#  become: no
#  local_action:
#    module: wait_for
#    host: "{{ ansible_host }}"
#    state: started
#    delay: 30
#    timeout: 300
#  when: upgrade_system
