---
- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
  tags:
    - always

- include: apt.yml
  when: ansible_pkg_mgr == "apt"

- include: yum.yml
  when: ansible_pkg_mgr == "yum"

- name: add http proxy to /etc/environment
  lineinfile:
    dest: /etc/environment
    line: "{{ item.var }}={{ item.value }}"
    regexp: ".*{{ item.var }}.*$"
    state: present
  with_items:
    - { var: "HTTP_PROXY", value: "{{ http_proxy }}" }
    - { var: "HTTPS_PROXY", value: "{{ https_proxy | default(http_proxy) }}" }
  when: http_proxy is defined and set_global_proxy

- include: install.yml

- name: disable IPv6
  sysctl:
    name: net.ipv6.conf.all.disable_ipv6
    value: 1
    sysctl_set: yes
    state: present
  when: disable_ipv6

- name: Set Message of the Day
  template:
    src: motd.j2
    dest: /etc/motd
  when: motd_message is defined

#- name: Reboot
#  command: shutdown -r now "Ansible updates triggered"
#  async: 0
#  poll: 0
#  ignore_errors: true
#  when: upgrade_system
#
#- name: Wait for server to come back
#  become: no
#  local_action:
#    module: wait_for
#    host: "{{ ansible_host }}"
#    state: started
#    delay: 30
#    timeout: 300
#  when: upgrade_system

