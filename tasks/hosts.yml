---
- name: Check if system was provisioned with cloudinit
  stat:
    path: /etc/cloud/cloud.cfg
  register: cloudinit

- name: disable hostname changind in cloud-init scripts
  lineinfile:
    dest: /etc/cloud/cloud.cfg
    regexp: "^preserve_hostname: false"
    line: "preserve_hostname: true"
    state: present
    backup: yes
  when: cloudinit.stat.exists

- name: change hostname in /etc/hostname
  hostname:
    name: "{{ inventory_hostname.split('.')[0] }}"

- name: change hostname in /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^127.0.0.1", line: "127.0.0.1 localhost" }
    - { regexp: "^127.0.1.1", line: "127.0.1.1 {{ inventory_hostname }}" }

- name: append inventory hosts
  lineinfile:
    dest: /etc/hosts
    line: "{{ hostvars[item]['ansible_' + system_interface ]['ipv4']['address'] if hostvars[item]['ansible_' + system_interface ]['ipv4'] is defined else '127.0.0.1' }} {{ hostvars[item].inventory_hostname }} {{ hostvars[item].inventory_hostname.split('.')[0] }}.{{ system_domain }}"
    regexp: ".*{{ hostvars[item].inventory_hostname.split('.')[0] }}.{{ system_domain }}$"
    state: present
  with_items: "{{ groups['all'] }}"
  ignore_errors: true

- name: append custom entries
  lineinfile:
    dest: /etc/hosts
    line: "{{ item.ip }} {{ item.name }}"
    regexp: ".*{{ item.name }}$"
    state: present
  with_items: "{{ system_custom_hosts }}"
